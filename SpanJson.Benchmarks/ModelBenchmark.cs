using System;
using BenchmarkDotNet.Attributes;
using SpanJson.Benchmarks.Serializers;
using SpanJson.Shared.Fixture;

namespace SpanJson.Benchmarks
{
  // Autogenerated
  // ReSharper disable BuiltInTypeReferenceStyle
  [Config(typeof(MyConfig))]
  public class ModelBenchmark
  {
    private static readonly ExpressionTreeFixture ExpressionTreeFixture = new(12345);
    private static readonly JilSerializer JilSerializer = new();
    private static readonly SpanJsonSerializer SpanJsonSerializer = new();
    private static readonly SpanJsonUtf8Serializer SpanJsonUtf8Serializer = new();
    private static readonly Utf8JsonSerializer Utf8JsonSerializer = new();
    private static readonly SystemTextJsonSerializer SystemTextJsonSerializer = new();
    private static readonly Shared.Models.AccessToken AccessTokenInput = ExpressionTreeFixture.Create<Shared.Models.AccessToken>();
    private static readonly Shared.Models.AccountMerge AccountMergeInput = ExpressionTreeFixture.Create<Shared.Models.AccountMerge>();
    private static readonly Shared.Models.Answer AnswerInput = ExpressionTreeFixture.Create<Shared.Models.Answer>();
    private static readonly Shared.Models.Badge BadgeInput = ExpressionTreeFixture.Create<Shared.Models.Badge>();
    private static readonly Shared.Models.Comment CommentInput = ExpressionTreeFixture.Create<Shared.Models.Comment>();
    private static readonly Shared.Models.Error ErrorInput = ExpressionTreeFixture.Create<Shared.Models.Error>();
    private static readonly Shared.Models.Event EventInput = ExpressionTreeFixture.Create<Shared.Models.Event>();
    private static readonly Shared.Models.FlagOption FlagOptionInput = ExpressionTreeFixture.Create<Shared.Models.FlagOption>();
    private static readonly Shared.Models.InboxItem InboxItemInput = ExpressionTreeFixture.Create<Shared.Models.InboxItem>();
    private static readonly Shared.Models.Info InfoInput = ExpressionTreeFixture.Create<Shared.Models.Info>();
    private static readonly Shared.Models.MobileAssociationBonus MobileAssociationBonusInput = ExpressionTreeFixture.Create<Shared.Models.MobileAssociationBonus>();
    private static readonly Shared.Models.MobileBadgeAward MobileBadgeAwardInput = ExpressionTreeFixture.Create<Shared.Models.MobileBadgeAward>();
    private static readonly Shared.Models.MobileBannerAd MobileBannerAdInput = ExpressionTreeFixture.Create<Shared.Models.MobileBannerAd>();
    private static readonly Shared.Models.MobileCareersJobAd MobileCareersJobAdInput = ExpressionTreeFixture.Create<Shared.Models.MobileCareersJobAd>();
    private static readonly Shared.Models.MobileCommunityBulletin MobileCommunityBulletinInput = ExpressionTreeFixture.Create<Shared.Models.MobileCommunityBulletin>();
    private static readonly Shared.Models.MobileFeed MobileFeedInput = ExpressionTreeFixture.Create<Shared.Models.MobileFeed>();
    private static readonly Shared.Models.MobileInboxItem MobileInboxItemInput = ExpressionTreeFixture.Create<Shared.Models.MobileInboxItem>();
    private static readonly Shared.Models.MobilePrivilege MobilePrivilegeInput = ExpressionTreeFixture.Create<Shared.Models.MobilePrivilege>();
    private static readonly Shared.Models.MobileQuestion MobileQuestionInput = ExpressionTreeFixture.Create<Shared.Models.MobileQuestion>();
    private static readonly Shared.Models.MobileRepChange MobileRepChangeInput = ExpressionTreeFixture.Create<Shared.Models.MobileRepChange>();
    private static readonly Shared.Models.MobileUpdateNotice MobileUpdateNoticeInput = ExpressionTreeFixture.Create<Shared.Models.MobileUpdateNotice>();
    private static readonly Shared.Models.NetworkUser NetworkUserInput = ExpressionTreeFixture.Create<Shared.Models.NetworkUser>();
    private static readonly Shared.Models.Notification NotificationInput = ExpressionTreeFixture.Create<Shared.Models.Notification>();
    private static readonly Shared.Models.Post PostInput = ExpressionTreeFixture.Create<Shared.Models.Post>();
    private static readonly Shared.Models.Privilege PrivilegeInput = ExpressionTreeFixture.Create<Shared.Models.Privilege>();
    private static readonly Shared.Models.Question QuestionInput = ExpressionTreeFixture.Create<Shared.Models.Question>();
    private static readonly Shared.Models.QuestionTimeline QuestionTimelineInput = ExpressionTreeFixture.Create<Shared.Models.QuestionTimeline>();
    private static readonly Shared.Models.Reputation ReputationInput = ExpressionTreeFixture.Create<Shared.Models.Reputation>();
    private static readonly Shared.Models.ReputationHistory ReputationHistoryInput = ExpressionTreeFixture.Create<Shared.Models.ReputationHistory>();
    private static readonly Shared.Models.Revision RevisionInput = ExpressionTreeFixture.Create<Shared.Models.Revision>();
    private static readonly Shared.Models.SearchExcerpt SearchExcerptInput = ExpressionTreeFixture.Create<Shared.Models.SearchExcerpt>();
    private static readonly Shared.Models.ShallowUser ShallowUserInput = ExpressionTreeFixture.Create<Shared.Models.ShallowUser>();
    private static readonly Shared.Models.SuggestedEdit SuggestedEditInput = ExpressionTreeFixture.Create<Shared.Models.SuggestedEdit>();
    private static readonly Shared.Models.Tag TagInput = ExpressionTreeFixture.Create<Shared.Models.Tag>();
    private static readonly Shared.Models.TagScore TagScoreInput = ExpressionTreeFixture.Create<Shared.Models.TagScore>();
    private static readonly Shared.Models.TagSynonym TagSynonymInput = ExpressionTreeFixture.Create<Shared.Models.TagSynonym>();
    private static readonly Shared.Models.TagWiki TagWikiInput = ExpressionTreeFixture.Create<Shared.Models.TagWiki>();
    private static readonly Shared.Models.TopTag TopTagInput = ExpressionTreeFixture.Create<Shared.Models.TopTag>();
    private static readonly Shared.Models.User UserInput = ExpressionTreeFixture.Create<Shared.Models.User>();
    private static readonly Shared.Models.UserTimeline UserTimelineInput = ExpressionTreeFixture.Create<Shared.Models.UserTimeline>();
    private static readonly Shared.Models.WritePermission WritePermissionInput = ExpressionTreeFixture.Create<Shared.Models.WritePermission>();
    private static readonly Shared.Models.Info.RelatedSite RelatedSiteInput = ExpressionTreeFixture.Create<Shared.Models.Info.RelatedSite>();
    private static readonly Shared.Models.Info.Site SiteInput = ExpressionTreeFixture.Create<Shared.Models.Info.Site>();
    private static readonly Shared.Models.MobileBannerAd.MobileBannerAdImage MobileBannerAdImageInput = ExpressionTreeFixture.Create<Shared.Models.MobileBannerAd.MobileBannerAdImage>();
    private static readonly Shared.Models.Question.ClosedDetails ClosedDetailsInput = ExpressionTreeFixture.Create<Shared.Models.Question.ClosedDetails>();
    private static readonly Shared.Models.Question.MigrationInfo MigrationInfoInput = ExpressionTreeFixture.Create<Shared.Models.Question.MigrationInfo>();
    private static readonly Shared.Models.Question.Notice NoticeInput = ExpressionTreeFixture.Create<Shared.Models.Question.Notice>();
    private static readonly Shared.Models.User.BadgeCount BadgeCountInput = ExpressionTreeFixture.Create<Shared.Models.User.BadgeCount>();
    private static readonly Shared.Models.Info.Site.Styling StylingInput = ExpressionTreeFixture.Create<Shared.Models.Info.Site.Styling>();
    private static readonly Shared.Models.Question.ClosedDetails.OriginalQuestion OriginalQuestionInput = ExpressionTreeFixture.Create<Shared.Models.Question.ClosedDetails.OriginalQuestion>();

    [Benchmark]
    public string SerializeAccessTokenWithJilSerializer()
    {
        return JilSerializer.Serialize(AccessTokenInput);
    }

    [Benchmark]
    public string SerializeAccessTokenWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(AccessTokenInput);
    }

    [Benchmark]
    public byte[] SerializeAccessTokenWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(AccessTokenInput);
    }

    [Benchmark]
    public byte[] SerializeAccessTokenWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(AccessTokenInput);
    }

    [Benchmark]
    public byte[] SerializeAccessTokenWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(AccessTokenInput);
    }

    [Benchmark]
    public string SerializeAccountMergeWithJilSerializer()
    {
        return JilSerializer.Serialize(AccountMergeInput);
    }

    [Benchmark]
    public string SerializeAccountMergeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(AccountMergeInput);
    }

    [Benchmark]
    public byte[] SerializeAccountMergeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(AccountMergeInput);
    }

    [Benchmark]
    public byte[] SerializeAccountMergeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(AccountMergeInput);
    }

    [Benchmark]
    public byte[] SerializeAccountMergeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(AccountMergeInput);
    }

    [Benchmark]
    public string SerializeAnswerWithJilSerializer()
    {
        return JilSerializer.Serialize(AnswerInput);
    }

    [Benchmark]
    public string SerializeAnswerWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(AnswerInput);
    }

    [Benchmark]
    public byte[] SerializeAnswerWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(AnswerInput);
    }

    [Benchmark]
    public byte[] SerializeAnswerWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(AnswerInput);
    }

    [Benchmark]
    public byte[] SerializeAnswerWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(AnswerInput);
    }

    [Benchmark]
    public string SerializeBadgeWithJilSerializer()
    {
        return JilSerializer.Serialize(BadgeInput);
    }

    [Benchmark]
    public string SerializeBadgeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(BadgeInput);
    }

    [Benchmark]
    public byte[] SerializeBadgeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(BadgeInput);
    }

    [Benchmark]
    public byte[] SerializeBadgeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(BadgeInput);
    }

    [Benchmark]
    public byte[] SerializeBadgeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(BadgeInput);
    }

    [Benchmark]
    public string SerializeCommentWithJilSerializer()
    {
        return JilSerializer.Serialize(CommentInput);
    }

    [Benchmark]
    public string SerializeCommentWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(CommentInput);
    }

    [Benchmark]
    public byte[] SerializeCommentWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(CommentInput);
    }

    [Benchmark]
    public byte[] SerializeCommentWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(CommentInput);
    }

    [Benchmark]
    public byte[] SerializeCommentWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(CommentInput);
    }

    [Benchmark]
    public string SerializeErrorWithJilSerializer()
    {
        return JilSerializer.Serialize(ErrorInput);
    }

    [Benchmark]
    public string SerializeErrorWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(ErrorInput);
    }

    [Benchmark]
    public byte[] SerializeErrorWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(ErrorInput);
    }

    [Benchmark]
    public byte[] SerializeErrorWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(ErrorInput);
    }

    [Benchmark]
    public byte[] SerializeErrorWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(ErrorInput);
    }

    [Benchmark]
    public string SerializeEventWithJilSerializer()
    {
        return JilSerializer.Serialize(EventInput);
    }

    [Benchmark]
    public string SerializeEventWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(EventInput);
    }

    [Benchmark]
    public byte[] SerializeEventWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(EventInput);
    }

    [Benchmark]
    public byte[] SerializeEventWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(EventInput);
    }

    [Benchmark]
    public byte[] SerializeEventWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(EventInput);
    }

    [Benchmark]
    public string SerializeFlagOptionWithJilSerializer()
    {
        return JilSerializer.Serialize(FlagOptionInput);
    }

    [Benchmark]
    public string SerializeFlagOptionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(FlagOptionInput);
    }

    [Benchmark]
    public byte[] SerializeFlagOptionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(FlagOptionInput);
    }

    [Benchmark]
    public byte[] SerializeFlagOptionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(FlagOptionInput);
    }

    [Benchmark]
    public byte[] SerializeFlagOptionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(FlagOptionInput);
    }

    [Benchmark]
    public string SerializeInboxItemWithJilSerializer()
    {
        return JilSerializer.Serialize(InboxItemInput);
    }

    [Benchmark]
    public string SerializeInboxItemWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(InboxItemInput);
    }

    [Benchmark]
    public byte[] SerializeInboxItemWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(InboxItemInput);
    }

    [Benchmark]
    public byte[] SerializeInboxItemWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(InboxItemInput);
    }

    [Benchmark]
    public byte[] SerializeInboxItemWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(InboxItemInput);
    }

    [Benchmark]
    public string SerializeInfoWithJilSerializer()
    {
        return JilSerializer.Serialize(InfoInput);
    }

    [Benchmark]
    public string SerializeInfoWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(InfoInput);
    }

    [Benchmark]
    public byte[] SerializeInfoWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(InfoInput);
    }

    [Benchmark]
    public byte[] SerializeInfoWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(InfoInput);
    }

    [Benchmark]
    public byte[] SerializeInfoWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(InfoInput);
    }

    [Benchmark]
    public string SerializeMobileAssociationBonusWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileAssociationBonusInput);
    }

    [Benchmark]
    public string SerializeMobileAssociationBonusWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileAssociationBonusInput);
    }

    [Benchmark]
    public byte[] SerializeMobileAssociationBonusWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileAssociationBonusInput);
    }

    [Benchmark]
    public byte[] SerializeMobileAssociationBonusWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileAssociationBonusInput);
    }

    [Benchmark]
    public byte[] SerializeMobileAssociationBonusWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileAssociationBonusInput);
    }

    [Benchmark]
    public string SerializeMobileBadgeAwardWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileBadgeAwardInput);
    }

    [Benchmark]
    public string SerializeMobileBadgeAwardWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileBadgeAwardInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBadgeAwardWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileBadgeAwardInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBadgeAwardWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileBadgeAwardInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBadgeAwardWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileBadgeAwardInput);
    }

    [Benchmark]
    public string SerializeMobileBannerAdWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileBannerAdInput);
    }

    [Benchmark]
    public string SerializeMobileBannerAdWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileBannerAdInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBannerAdWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileBannerAdInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBannerAdWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileBannerAdInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBannerAdWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileBannerAdInput);
    }

    [Benchmark]
    public string SerializeMobileCareersJobAdWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileCareersJobAdInput);
    }

    [Benchmark]
    public string SerializeMobileCareersJobAdWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileCareersJobAdInput);
    }

    [Benchmark]
    public byte[] SerializeMobileCareersJobAdWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileCareersJobAdInput);
    }

    [Benchmark]
    public byte[] SerializeMobileCareersJobAdWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileCareersJobAdInput);
    }

    [Benchmark]
    public byte[] SerializeMobileCareersJobAdWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileCareersJobAdInput);
    }

    [Benchmark]
    public string SerializeMobileCommunityBulletinWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileCommunityBulletinInput);
    }

    [Benchmark]
    public string SerializeMobileCommunityBulletinWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileCommunityBulletinInput);
    }

    [Benchmark]
    public byte[] SerializeMobileCommunityBulletinWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileCommunityBulletinInput);
    }

    [Benchmark]
    public byte[] SerializeMobileCommunityBulletinWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileCommunityBulletinInput);
    }

    [Benchmark]
    public byte[] SerializeMobileCommunityBulletinWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileCommunityBulletinInput);
    }

    [Benchmark]
    public string SerializeMobileFeedWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileFeedInput);
    }

    [Benchmark]
    public string SerializeMobileFeedWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileFeedInput);
    }

    [Benchmark]
    public byte[] SerializeMobileFeedWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileFeedInput);
    }

    [Benchmark]
    public byte[] SerializeMobileFeedWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileFeedInput);
    }

    [Benchmark]
    public byte[] SerializeMobileFeedWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileFeedInput);
    }

    [Benchmark]
    public string SerializeMobileInboxItemWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileInboxItemInput);
    }

    [Benchmark]
    public string SerializeMobileInboxItemWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileInboxItemInput);
    }

    [Benchmark]
    public byte[] SerializeMobileInboxItemWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileInboxItemInput);
    }

    [Benchmark]
    public byte[] SerializeMobileInboxItemWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileInboxItemInput);
    }

    [Benchmark]
    public byte[] SerializeMobileInboxItemWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileInboxItemInput);
    }

    [Benchmark]
    public string SerializeMobilePrivilegeWithJilSerializer()
    {
        return JilSerializer.Serialize(MobilePrivilegeInput);
    }

    [Benchmark]
    public string SerializeMobilePrivilegeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobilePrivilegeInput);
    }

    [Benchmark]
    public byte[] SerializeMobilePrivilegeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobilePrivilegeInput);
    }

    [Benchmark]
    public byte[] SerializeMobilePrivilegeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobilePrivilegeInput);
    }

    [Benchmark]
    public byte[] SerializeMobilePrivilegeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobilePrivilegeInput);
    }

    [Benchmark]
    public string SerializeMobileQuestionWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileQuestionInput);
    }

    [Benchmark]
    public string SerializeMobileQuestionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileQuestionInput);
    }

    [Benchmark]
    public byte[] SerializeMobileQuestionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileQuestionInput);
    }

    [Benchmark]
    public byte[] SerializeMobileQuestionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileQuestionInput);
    }

    [Benchmark]
    public byte[] SerializeMobileQuestionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileQuestionInput);
    }

    [Benchmark]
    public string SerializeMobileRepChangeWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileRepChangeInput);
    }

    [Benchmark]
    public string SerializeMobileRepChangeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileRepChangeInput);
    }

    [Benchmark]
    public byte[] SerializeMobileRepChangeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileRepChangeInput);
    }

    [Benchmark]
    public byte[] SerializeMobileRepChangeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileRepChangeInput);
    }

    [Benchmark]
    public byte[] SerializeMobileRepChangeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileRepChangeInput);
    }

    [Benchmark]
    public string SerializeMobileUpdateNoticeWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileUpdateNoticeInput);
    }

    [Benchmark]
    public string SerializeMobileUpdateNoticeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileUpdateNoticeInput);
    }

    [Benchmark]
    public byte[] SerializeMobileUpdateNoticeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileUpdateNoticeInput);
    }

    [Benchmark]
    public byte[] SerializeMobileUpdateNoticeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileUpdateNoticeInput);
    }

    [Benchmark]
    public byte[] SerializeMobileUpdateNoticeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileUpdateNoticeInput);
    }

    [Benchmark]
    public string SerializeNetworkUserWithJilSerializer()
    {
        return JilSerializer.Serialize(NetworkUserInput);
    }

    [Benchmark]
    public string SerializeNetworkUserWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(NetworkUserInput);
    }

    [Benchmark]
    public byte[] SerializeNetworkUserWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(NetworkUserInput);
    }

    [Benchmark]
    public byte[] SerializeNetworkUserWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(NetworkUserInput);
    }

    [Benchmark]
    public byte[] SerializeNetworkUserWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(NetworkUserInput);
    }

    [Benchmark]
    public string SerializeNotificationWithJilSerializer()
    {
        return JilSerializer.Serialize(NotificationInput);
    }

    [Benchmark]
    public string SerializeNotificationWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(NotificationInput);
    }

    [Benchmark]
    public byte[] SerializeNotificationWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(NotificationInput);
    }

    [Benchmark]
    public byte[] SerializeNotificationWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(NotificationInput);
    }

    [Benchmark]
    public byte[] SerializeNotificationWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(NotificationInput);
    }

    [Benchmark]
    public string SerializePostWithJilSerializer()
    {
        return JilSerializer.Serialize(PostInput);
    }

    [Benchmark]
    public string SerializePostWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(PostInput);
    }

    [Benchmark]
    public byte[] SerializePostWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(PostInput);
    }

    [Benchmark]
    public byte[] SerializePostWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(PostInput);
    }

    [Benchmark]
    public byte[] SerializePostWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(PostInput);
    }

    [Benchmark]
    public string SerializePrivilegeWithJilSerializer()
    {
        return JilSerializer.Serialize(PrivilegeInput);
    }

    [Benchmark]
    public string SerializePrivilegeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(PrivilegeInput);
    }

    [Benchmark]
    public byte[] SerializePrivilegeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(PrivilegeInput);
    }

    [Benchmark]
    public byte[] SerializePrivilegeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(PrivilegeInput);
    }

    [Benchmark]
    public byte[] SerializePrivilegeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(PrivilegeInput);
    }

    [Benchmark]
    public string SerializeQuestionWithJilSerializer()
    {
        return JilSerializer.Serialize(QuestionInput);
    }

    [Benchmark]
    public string SerializeQuestionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(QuestionInput);
    }

    [Benchmark]
    public byte[] SerializeQuestionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(QuestionInput);
    }

    [Benchmark]
    public byte[] SerializeQuestionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(QuestionInput);
    }

    [Benchmark]
    public byte[] SerializeQuestionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(QuestionInput);
    }

    [Benchmark]
    public string SerializeQuestionTimelineWithJilSerializer()
    {
        return JilSerializer.Serialize(QuestionTimelineInput);
    }

    [Benchmark]
    public string SerializeQuestionTimelineWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(QuestionTimelineInput);
    }

    [Benchmark]
    public byte[] SerializeQuestionTimelineWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(QuestionTimelineInput);
    }

    [Benchmark]
    public byte[] SerializeQuestionTimelineWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(QuestionTimelineInput);
    }

    [Benchmark]
    public byte[] SerializeQuestionTimelineWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(QuestionTimelineInput);
    }

    [Benchmark]
    public string SerializeReputationWithJilSerializer()
    {
        return JilSerializer.Serialize(ReputationInput);
    }

    [Benchmark]
    public string SerializeReputationWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(ReputationInput);
    }

    [Benchmark]
    public byte[] SerializeReputationWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(ReputationInput);
    }

    [Benchmark]
    public byte[] SerializeReputationWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(ReputationInput);
    }

    [Benchmark]
    public byte[] SerializeReputationWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(ReputationInput);
    }

    [Benchmark]
    public string SerializeReputationHistoryWithJilSerializer()
    {
        return JilSerializer.Serialize(ReputationHistoryInput);
    }

    [Benchmark]
    public string SerializeReputationHistoryWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(ReputationHistoryInput);
    }

    [Benchmark]
    public byte[] SerializeReputationHistoryWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(ReputationHistoryInput);
    }

    [Benchmark]
    public byte[] SerializeReputationHistoryWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(ReputationHistoryInput);
    }

    [Benchmark]
    public byte[] SerializeReputationHistoryWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(ReputationHistoryInput);
    }

    [Benchmark]
    public string SerializeRevisionWithJilSerializer()
    {
        return JilSerializer.Serialize(RevisionInput);
    }

    [Benchmark]
    public string SerializeRevisionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(RevisionInput);
    }

    [Benchmark]
    public byte[] SerializeRevisionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(RevisionInput);
    }

    [Benchmark]
    public byte[] SerializeRevisionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(RevisionInput);
    }

    [Benchmark]
    public byte[] SerializeRevisionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(RevisionInput);
    }

    [Benchmark]
    public string SerializeSearchExcerptWithJilSerializer()
    {
        return JilSerializer.Serialize(SearchExcerptInput);
    }

    [Benchmark]
    public string SerializeSearchExcerptWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(SearchExcerptInput);
    }

    [Benchmark]
    public byte[] SerializeSearchExcerptWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(SearchExcerptInput);
    }

    [Benchmark]
    public byte[] SerializeSearchExcerptWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(SearchExcerptInput);
    }

    [Benchmark]
    public byte[] SerializeSearchExcerptWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(SearchExcerptInput);
    }

    [Benchmark]
    public string SerializeShallowUserWithJilSerializer()
    {
        return JilSerializer.Serialize(ShallowUserInput);
    }

    [Benchmark]
    public string SerializeShallowUserWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(ShallowUserInput);
    }

    [Benchmark]
    public byte[] SerializeShallowUserWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(ShallowUserInput);
    }

    [Benchmark]
    public byte[] SerializeShallowUserWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(ShallowUserInput);
    }

    [Benchmark]
    public byte[] SerializeShallowUserWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(ShallowUserInput);
    }

    [Benchmark]
    public string SerializeSuggestedEditWithJilSerializer()
    {
        return JilSerializer.Serialize(SuggestedEditInput);
    }

    [Benchmark]
    public string SerializeSuggestedEditWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(SuggestedEditInput);
    }

    [Benchmark]
    public byte[] SerializeSuggestedEditWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(SuggestedEditInput);
    }

    [Benchmark]
    public byte[] SerializeSuggestedEditWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(SuggestedEditInput);
    }

    [Benchmark]
    public byte[] SerializeSuggestedEditWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(SuggestedEditInput);
    }

    [Benchmark]
    public string SerializeTagWithJilSerializer()
    {
        return JilSerializer.Serialize(TagInput);
    }

    [Benchmark]
    public string SerializeTagWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(TagInput);
    }

    [Benchmark]
    public byte[] SerializeTagWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(TagInput);
    }

    [Benchmark]
    public byte[] SerializeTagWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(TagInput);
    }

    [Benchmark]
    public byte[] SerializeTagWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(TagInput);
    }

    [Benchmark]
    public string SerializeTagScoreWithJilSerializer()
    {
        return JilSerializer.Serialize(TagScoreInput);
    }

    [Benchmark]
    public string SerializeTagScoreWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(TagScoreInput);
    }

    [Benchmark]
    public byte[] SerializeTagScoreWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(TagScoreInput);
    }

    [Benchmark]
    public byte[] SerializeTagScoreWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(TagScoreInput);
    }

    [Benchmark]
    public byte[] SerializeTagScoreWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(TagScoreInput);
    }

    [Benchmark]
    public string SerializeTagSynonymWithJilSerializer()
    {
        return JilSerializer.Serialize(TagSynonymInput);
    }

    [Benchmark]
    public string SerializeTagSynonymWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(TagSynonymInput);
    }

    [Benchmark]
    public byte[] SerializeTagSynonymWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(TagSynonymInput);
    }

    [Benchmark]
    public byte[] SerializeTagSynonymWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(TagSynonymInput);
    }

    [Benchmark]
    public byte[] SerializeTagSynonymWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(TagSynonymInput);
    }

    [Benchmark]
    public string SerializeTagWikiWithJilSerializer()
    {
        return JilSerializer.Serialize(TagWikiInput);
    }

    [Benchmark]
    public string SerializeTagWikiWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(TagWikiInput);
    }

    [Benchmark]
    public byte[] SerializeTagWikiWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(TagWikiInput);
    }

    [Benchmark]
    public byte[] SerializeTagWikiWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(TagWikiInput);
    }

    [Benchmark]
    public byte[] SerializeTagWikiWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(TagWikiInput);
    }

    [Benchmark]
    public string SerializeTopTagWithJilSerializer()
    {
        return JilSerializer.Serialize(TopTagInput);
    }

    [Benchmark]
    public string SerializeTopTagWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(TopTagInput);
    }

    [Benchmark]
    public byte[] SerializeTopTagWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(TopTagInput);
    }

    [Benchmark]
    public byte[] SerializeTopTagWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(TopTagInput);
    }

    [Benchmark]
    public byte[] SerializeTopTagWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(TopTagInput);
    }

    [Benchmark]
    public string SerializeUserWithJilSerializer()
    {
        return JilSerializer.Serialize(UserInput);
    }

    [Benchmark]
    public string SerializeUserWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(UserInput);
    }

    [Benchmark]
    public byte[] SerializeUserWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(UserInput);
    }

    [Benchmark]
    public byte[] SerializeUserWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(UserInput);
    }

    [Benchmark]
    public byte[] SerializeUserWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(UserInput);
    }

    [Benchmark]
    public string SerializeUserTimelineWithJilSerializer()
    {
        return JilSerializer.Serialize(UserTimelineInput);
    }

    [Benchmark]
    public string SerializeUserTimelineWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(UserTimelineInput);
    }

    [Benchmark]
    public byte[] SerializeUserTimelineWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(UserTimelineInput);
    }

    [Benchmark]
    public byte[] SerializeUserTimelineWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(UserTimelineInput);
    }

    [Benchmark]
    public byte[] SerializeUserTimelineWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(UserTimelineInput);
    }

    [Benchmark]
    public string SerializeWritePermissionWithJilSerializer()
    {
        return JilSerializer.Serialize(WritePermissionInput);
    }

    [Benchmark]
    public string SerializeWritePermissionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(WritePermissionInput);
    }

    [Benchmark]
    public byte[] SerializeWritePermissionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(WritePermissionInput);
    }

    [Benchmark]
    public byte[] SerializeWritePermissionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(WritePermissionInput);
    }

    [Benchmark]
    public byte[] SerializeWritePermissionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(WritePermissionInput);
    }

    [Benchmark]
    public string SerializeRelatedSiteWithJilSerializer()
    {
        return JilSerializer.Serialize(RelatedSiteInput);
    }

    [Benchmark]
    public string SerializeRelatedSiteWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(RelatedSiteInput);
    }

    [Benchmark]
    public byte[] SerializeRelatedSiteWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(RelatedSiteInput);
    }

    [Benchmark]
    public byte[] SerializeRelatedSiteWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(RelatedSiteInput);
    }

    [Benchmark]
    public byte[] SerializeRelatedSiteWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(RelatedSiteInput);
    }

    [Benchmark]
    public string SerializeSiteWithJilSerializer()
    {
        return JilSerializer.Serialize(SiteInput);
    }

    [Benchmark]
    public string SerializeSiteWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(SiteInput);
    }

    [Benchmark]
    public byte[] SerializeSiteWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(SiteInput);
    }

    [Benchmark]
    public byte[] SerializeSiteWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(SiteInput);
    }

    [Benchmark]
    public byte[] SerializeSiteWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(SiteInput);
    }

    [Benchmark]
    public string SerializeMobileBannerAdImageWithJilSerializer()
    {
        return JilSerializer.Serialize(MobileBannerAdImageInput);
    }

    [Benchmark]
    public string SerializeMobileBannerAdImageWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MobileBannerAdImageInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBannerAdImageWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MobileBannerAdImageInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBannerAdImageWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MobileBannerAdImageInput);
    }

    [Benchmark]
    public byte[] SerializeMobileBannerAdImageWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MobileBannerAdImageInput);
    }

    [Benchmark]
    public string SerializeClosedDetailsWithJilSerializer()
    {
        return JilSerializer.Serialize(ClosedDetailsInput);
    }

    [Benchmark]
    public string SerializeClosedDetailsWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(ClosedDetailsInput);
    }

    [Benchmark]
    public byte[] SerializeClosedDetailsWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(ClosedDetailsInput);
    }

    [Benchmark]
    public byte[] SerializeClosedDetailsWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(ClosedDetailsInput);
    }

    [Benchmark]
    public byte[] SerializeClosedDetailsWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(ClosedDetailsInput);
    }

    [Benchmark]
    public string SerializeMigrationInfoWithJilSerializer()
    {
        return JilSerializer.Serialize(MigrationInfoInput);
    }

    [Benchmark]
    public string SerializeMigrationInfoWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(MigrationInfoInput);
    }

    [Benchmark]
    public byte[] SerializeMigrationInfoWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(MigrationInfoInput);
    }

    [Benchmark]
    public byte[] SerializeMigrationInfoWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(MigrationInfoInput);
    }

    [Benchmark]
    public byte[] SerializeMigrationInfoWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(MigrationInfoInput);
    }

    [Benchmark]
    public string SerializeNoticeWithJilSerializer()
    {
        return JilSerializer.Serialize(NoticeInput);
    }

    [Benchmark]
    public string SerializeNoticeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(NoticeInput);
    }

    [Benchmark]
    public byte[] SerializeNoticeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(NoticeInput);
    }

    [Benchmark]
    public byte[] SerializeNoticeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(NoticeInput);
    }

    [Benchmark]
    public byte[] SerializeNoticeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(NoticeInput);
    }

    [Benchmark]
    public string SerializeBadgeCountWithJilSerializer()
    {
        return JilSerializer.Serialize(BadgeCountInput);
    }

    [Benchmark]
    public string SerializeBadgeCountWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(BadgeCountInput);
    }

    [Benchmark]
    public byte[] SerializeBadgeCountWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(BadgeCountInput);
    }

    [Benchmark]
    public byte[] SerializeBadgeCountWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(BadgeCountInput);
    }

    [Benchmark]
    public byte[] SerializeBadgeCountWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(BadgeCountInput);
    }

    [Benchmark]
    public string SerializeStylingWithJilSerializer()
    {
        return JilSerializer.Serialize(StylingInput);
    }

    [Benchmark]
    public string SerializeStylingWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(StylingInput);
    }

    [Benchmark]
    public byte[] SerializeStylingWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(StylingInput);
    }

    [Benchmark]
    public byte[] SerializeStylingWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(StylingInput);
    }

    [Benchmark]
    public byte[] SerializeStylingWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(StylingInput);
    }

    [Benchmark]
    public string SerializeOriginalQuestionWithJilSerializer()
    {
        return JilSerializer.Serialize(OriginalQuestionInput);
    }

    [Benchmark]
    public string SerializeOriginalQuestionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Serialize(OriginalQuestionInput);
    }

    [Benchmark]
    public byte[] SerializeOriginalQuestionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Serialize(OriginalQuestionInput);
    }

    [Benchmark]
    public byte[] SerializeOriginalQuestionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Serialize(OriginalQuestionInput);
    }

    [Benchmark]
    public byte[] SerializeOriginalQuestionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Serialize(OriginalQuestionInput);
    }
    private static readonly string AccessTokenOutputOfJilSerializer = JilSerializer.Serialize(AccessTokenInput);
    [Benchmark]
    public Shared.Models.AccessToken DeserializeAccessTokenWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.AccessToken>(AccessTokenOutputOfJilSerializer);
    }
    private static readonly string AccessTokenOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(AccessTokenInput);
    [Benchmark]
    public Shared.Models.AccessToken DeserializeAccessTokenWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.AccessToken>(AccessTokenOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] AccessTokenOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(AccessTokenInput);
    [Benchmark]
    public Shared.Models.AccessToken DeserializeAccessTokenWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.AccessToken>(AccessTokenOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] AccessTokenOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(AccessTokenInput);
    [Benchmark]
    public Shared.Models.AccessToken DeserializeAccessTokenWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.AccessToken>(AccessTokenOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] AccessTokenOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(AccessTokenInput);
    [Benchmark]
    public Shared.Models.AccessToken DeserializeAccessTokenWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.AccessToken>(AccessTokenOutputOfSystemTextJsonSerializer);
    }
    private static readonly string AccountMergeOutputOfJilSerializer = JilSerializer.Serialize(AccountMergeInput);
    [Benchmark]
    public Shared.Models.AccountMerge DeserializeAccountMergeWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.AccountMerge>(AccountMergeOutputOfJilSerializer);
    }
    private static readonly string AccountMergeOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(AccountMergeInput);
    [Benchmark]
    public Shared.Models.AccountMerge DeserializeAccountMergeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.AccountMerge>(AccountMergeOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] AccountMergeOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(AccountMergeInput);
    [Benchmark]
    public Shared.Models.AccountMerge DeserializeAccountMergeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.AccountMerge>(AccountMergeOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] AccountMergeOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(AccountMergeInput);
    [Benchmark]
    public Shared.Models.AccountMerge DeserializeAccountMergeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.AccountMerge>(AccountMergeOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] AccountMergeOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(AccountMergeInput);
    [Benchmark]
    public Shared.Models.AccountMerge DeserializeAccountMergeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.AccountMerge>(AccountMergeOutputOfSystemTextJsonSerializer);
    }
    private static readonly string AnswerOutputOfJilSerializer = JilSerializer.Serialize(AnswerInput);
    [Benchmark]
    public Shared.Models.Answer DeserializeAnswerWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Answer>(AnswerOutputOfJilSerializer);
    }
    private static readonly string AnswerOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(AnswerInput);
    [Benchmark]
    public Shared.Models.Answer DeserializeAnswerWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Answer>(AnswerOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] AnswerOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(AnswerInput);
    [Benchmark]
    public Shared.Models.Answer DeserializeAnswerWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Answer>(AnswerOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] AnswerOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(AnswerInput);
    [Benchmark]
    public Shared.Models.Answer DeserializeAnswerWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Answer>(AnswerOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] AnswerOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(AnswerInput);
    [Benchmark]
    public Shared.Models.Answer DeserializeAnswerWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Answer>(AnswerOutputOfSystemTextJsonSerializer);
    }
    private static readonly string BadgeOutputOfJilSerializer = JilSerializer.Serialize(BadgeInput);
    [Benchmark]
    public Shared.Models.Badge DeserializeBadgeWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Badge>(BadgeOutputOfJilSerializer);
    }
    private static readonly string BadgeOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(BadgeInput);
    [Benchmark]
    public Shared.Models.Badge DeserializeBadgeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Badge>(BadgeOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] BadgeOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(BadgeInput);
    [Benchmark]
    public Shared.Models.Badge DeserializeBadgeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Badge>(BadgeOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] BadgeOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(BadgeInput);
    [Benchmark]
    public Shared.Models.Badge DeserializeBadgeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Badge>(BadgeOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] BadgeOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(BadgeInput);
    [Benchmark]
    public Shared.Models.Badge DeserializeBadgeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Badge>(BadgeOutputOfSystemTextJsonSerializer);
    }
    private static readonly string CommentOutputOfJilSerializer = JilSerializer.Serialize(CommentInput);
    [Benchmark]
    public Shared.Models.Comment DeserializeCommentWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Comment>(CommentOutputOfJilSerializer);
    }
    private static readonly string CommentOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(CommentInput);
    [Benchmark]
    public Shared.Models.Comment DeserializeCommentWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Comment>(CommentOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] CommentOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(CommentInput);
    [Benchmark]
    public Shared.Models.Comment DeserializeCommentWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Comment>(CommentOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] CommentOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(CommentInput);
    [Benchmark]
    public Shared.Models.Comment DeserializeCommentWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Comment>(CommentOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] CommentOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(CommentInput);
    [Benchmark]
    public Shared.Models.Comment DeserializeCommentWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Comment>(CommentOutputOfSystemTextJsonSerializer);
    }
    private static readonly string ErrorOutputOfJilSerializer = JilSerializer.Serialize(ErrorInput);
    [Benchmark]
    public Shared.Models.Error DeserializeErrorWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Error>(ErrorOutputOfJilSerializer);
    }
    private static readonly string ErrorOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(ErrorInput);
    [Benchmark]
    public Shared.Models.Error DeserializeErrorWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Error>(ErrorOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] ErrorOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(ErrorInput);
    [Benchmark]
    public Shared.Models.Error DeserializeErrorWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Error>(ErrorOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] ErrorOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(ErrorInput);
    [Benchmark]
    public Shared.Models.Error DeserializeErrorWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Error>(ErrorOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] ErrorOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(ErrorInput);
    [Benchmark]
    public Shared.Models.Error DeserializeErrorWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Error>(ErrorOutputOfSystemTextJsonSerializer);
    }
    private static readonly string EventOutputOfJilSerializer = JilSerializer.Serialize(EventInput);
    [Benchmark]
    public Shared.Models.Event DeserializeEventWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Event>(EventOutputOfJilSerializer);
    }
    private static readonly string EventOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(EventInput);
    [Benchmark]
    public Shared.Models.Event DeserializeEventWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Event>(EventOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] EventOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(EventInput);
    [Benchmark]
    public Shared.Models.Event DeserializeEventWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Event>(EventOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] EventOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(EventInput);
    [Benchmark]
    public Shared.Models.Event DeserializeEventWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Event>(EventOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] EventOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(EventInput);
    [Benchmark]
    public Shared.Models.Event DeserializeEventWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Event>(EventOutputOfSystemTextJsonSerializer);
    }
    private static readonly string FlagOptionOutputOfJilSerializer = JilSerializer.Serialize(FlagOptionInput);
    [Benchmark]
    public Shared.Models.FlagOption DeserializeFlagOptionWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.FlagOption>(FlagOptionOutputOfJilSerializer);
    }
    private static readonly string FlagOptionOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(FlagOptionInput);
    [Benchmark]
    public Shared.Models.FlagOption DeserializeFlagOptionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.FlagOption>(FlagOptionOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] FlagOptionOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(FlagOptionInput);
    [Benchmark]
    public Shared.Models.FlagOption DeserializeFlagOptionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.FlagOption>(FlagOptionOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] FlagOptionOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(FlagOptionInput);
    [Benchmark]
    public Shared.Models.FlagOption DeserializeFlagOptionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.FlagOption>(FlagOptionOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] FlagOptionOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(FlagOptionInput);
    [Benchmark]
    public Shared.Models.FlagOption DeserializeFlagOptionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.FlagOption>(FlagOptionOutputOfSystemTextJsonSerializer);
    }
    private static readonly string InboxItemOutputOfJilSerializer = JilSerializer.Serialize(InboxItemInput);
    [Benchmark]
    public Shared.Models.InboxItem DeserializeInboxItemWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.InboxItem>(InboxItemOutputOfJilSerializer);
    }
    private static readonly string InboxItemOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(InboxItemInput);
    [Benchmark]
    public Shared.Models.InboxItem DeserializeInboxItemWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.InboxItem>(InboxItemOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] InboxItemOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(InboxItemInput);
    [Benchmark]
    public Shared.Models.InboxItem DeserializeInboxItemWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.InboxItem>(InboxItemOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] InboxItemOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(InboxItemInput);
    [Benchmark]
    public Shared.Models.InboxItem DeserializeInboxItemWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.InboxItem>(InboxItemOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] InboxItemOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(InboxItemInput);
    [Benchmark]
    public Shared.Models.InboxItem DeserializeInboxItemWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.InboxItem>(InboxItemOutputOfSystemTextJsonSerializer);
    }
    private static readonly string InfoOutputOfJilSerializer = JilSerializer.Serialize(InfoInput);
    [Benchmark]
    public Shared.Models.Info DeserializeInfoWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Info>(InfoOutputOfJilSerializer);
    }
    private static readonly string InfoOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(InfoInput);
    [Benchmark]
    public Shared.Models.Info DeserializeInfoWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Info>(InfoOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] InfoOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(InfoInput);
    [Benchmark]
    public Shared.Models.Info DeserializeInfoWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Info>(InfoOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] InfoOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(InfoInput);
    [Benchmark]
    public Shared.Models.Info DeserializeInfoWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Info>(InfoOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] InfoOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(InfoInput);
    [Benchmark]
    public Shared.Models.Info DeserializeInfoWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Info>(InfoOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileAssociationBonusOutputOfJilSerializer = JilSerializer.Serialize(MobileAssociationBonusInput);
    [Benchmark]
    public Shared.Models.MobileAssociationBonus DeserializeMobileAssociationBonusWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileAssociationBonus>(MobileAssociationBonusOutputOfJilSerializer);
    }
    private static readonly string MobileAssociationBonusOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileAssociationBonusInput);
    [Benchmark]
    public Shared.Models.MobileAssociationBonus DeserializeMobileAssociationBonusWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileAssociationBonus>(MobileAssociationBonusOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileAssociationBonusOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileAssociationBonusInput);
    [Benchmark]
    public Shared.Models.MobileAssociationBonus DeserializeMobileAssociationBonusWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileAssociationBonus>(MobileAssociationBonusOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileAssociationBonusOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileAssociationBonusInput);
    [Benchmark]
    public Shared.Models.MobileAssociationBonus DeserializeMobileAssociationBonusWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileAssociationBonus>(MobileAssociationBonusOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileAssociationBonusOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileAssociationBonusInput);
    [Benchmark]
    public Shared.Models.MobileAssociationBonus DeserializeMobileAssociationBonusWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileAssociationBonus>(MobileAssociationBonusOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileBadgeAwardOutputOfJilSerializer = JilSerializer.Serialize(MobileBadgeAwardInput);
    [Benchmark]
    public Shared.Models.MobileBadgeAward DeserializeMobileBadgeAwardWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileBadgeAward>(MobileBadgeAwardOutputOfJilSerializer);
    }
    private static readonly string MobileBadgeAwardOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileBadgeAwardInput);
    [Benchmark]
    public Shared.Models.MobileBadgeAward DeserializeMobileBadgeAwardWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileBadgeAward>(MobileBadgeAwardOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileBadgeAwardOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileBadgeAwardInput);
    [Benchmark]
    public Shared.Models.MobileBadgeAward DeserializeMobileBadgeAwardWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileBadgeAward>(MobileBadgeAwardOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileBadgeAwardOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileBadgeAwardInput);
    [Benchmark]
    public Shared.Models.MobileBadgeAward DeserializeMobileBadgeAwardWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileBadgeAward>(MobileBadgeAwardOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileBadgeAwardOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileBadgeAwardInput);
    [Benchmark]
    public Shared.Models.MobileBadgeAward DeserializeMobileBadgeAwardWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileBadgeAward>(MobileBadgeAwardOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileBannerAdOutputOfJilSerializer = JilSerializer.Serialize(MobileBannerAdInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd DeserializeMobileBannerAdWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileBannerAd>(MobileBannerAdOutputOfJilSerializer);
    }
    private static readonly string MobileBannerAdOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileBannerAdInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd DeserializeMobileBannerAdWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileBannerAd>(MobileBannerAdOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileBannerAdOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileBannerAdInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd DeserializeMobileBannerAdWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileBannerAd>(MobileBannerAdOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileBannerAdOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileBannerAdInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd DeserializeMobileBannerAdWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileBannerAd>(MobileBannerAdOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileBannerAdOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileBannerAdInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd DeserializeMobileBannerAdWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileBannerAd>(MobileBannerAdOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileCareersJobAdOutputOfJilSerializer = JilSerializer.Serialize(MobileCareersJobAdInput);
    [Benchmark]
    public Shared.Models.MobileCareersJobAd DeserializeMobileCareersJobAdWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileCareersJobAd>(MobileCareersJobAdOutputOfJilSerializer);
    }
    private static readonly string MobileCareersJobAdOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileCareersJobAdInput);
    [Benchmark]
    public Shared.Models.MobileCareersJobAd DeserializeMobileCareersJobAdWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileCareersJobAd>(MobileCareersJobAdOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileCareersJobAdOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileCareersJobAdInput);
    [Benchmark]
    public Shared.Models.MobileCareersJobAd DeserializeMobileCareersJobAdWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileCareersJobAd>(MobileCareersJobAdOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileCareersJobAdOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileCareersJobAdInput);
    [Benchmark]
    public Shared.Models.MobileCareersJobAd DeserializeMobileCareersJobAdWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileCareersJobAd>(MobileCareersJobAdOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileCareersJobAdOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileCareersJobAdInput);
    [Benchmark]
    public Shared.Models.MobileCareersJobAd DeserializeMobileCareersJobAdWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileCareersJobAd>(MobileCareersJobAdOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileCommunityBulletinOutputOfJilSerializer = JilSerializer.Serialize(MobileCommunityBulletinInput);
    [Benchmark]
    public Shared.Models.MobileCommunityBulletin DeserializeMobileCommunityBulletinWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileCommunityBulletin>(MobileCommunityBulletinOutputOfJilSerializer);
    }
    private static readonly string MobileCommunityBulletinOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileCommunityBulletinInput);
    [Benchmark]
    public Shared.Models.MobileCommunityBulletin DeserializeMobileCommunityBulletinWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileCommunityBulletin>(MobileCommunityBulletinOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileCommunityBulletinOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileCommunityBulletinInput);
    [Benchmark]
    public Shared.Models.MobileCommunityBulletin DeserializeMobileCommunityBulletinWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileCommunityBulletin>(MobileCommunityBulletinOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileCommunityBulletinOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileCommunityBulletinInput);
    [Benchmark]
    public Shared.Models.MobileCommunityBulletin DeserializeMobileCommunityBulletinWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileCommunityBulletin>(MobileCommunityBulletinOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileCommunityBulletinOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileCommunityBulletinInput);
    [Benchmark]
    public Shared.Models.MobileCommunityBulletin DeserializeMobileCommunityBulletinWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileCommunityBulletin>(MobileCommunityBulletinOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileFeedOutputOfJilSerializer = JilSerializer.Serialize(MobileFeedInput);
    [Benchmark]
    public Shared.Models.MobileFeed DeserializeMobileFeedWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileFeed>(MobileFeedOutputOfJilSerializer);
    }
    private static readonly string MobileFeedOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileFeedInput);
    [Benchmark]
    public Shared.Models.MobileFeed DeserializeMobileFeedWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileFeed>(MobileFeedOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileFeedOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileFeedInput);
    [Benchmark]
    public Shared.Models.MobileFeed DeserializeMobileFeedWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileFeed>(MobileFeedOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileFeedOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileFeedInput);
    [Benchmark]
    public Shared.Models.MobileFeed DeserializeMobileFeedWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileFeed>(MobileFeedOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileFeedOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileFeedInput);
    [Benchmark]
    public Shared.Models.MobileFeed DeserializeMobileFeedWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileFeed>(MobileFeedOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileInboxItemOutputOfJilSerializer = JilSerializer.Serialize(MobileInboxItemInput);
    [Benchmark]
    public Shared.Models.MobileInboxItem DeserializeMobileInboxItemWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileInboxItem>(MobileInboxItemOutputOfJilSerializer);
    }
    private static readonly string MobileInboxItemOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileInboxItemInput);
    [Benchmark]
    public Shared.Models.MobileInboxItem DeserializeMobileInboxItemWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileInboxItem>(MobileInboxItemOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileInboxItemOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileInboxItemInput);
    [Benchmark]
    public Shared.Models.MobileInboxItem DeserializeMobileInboxItemWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileInboxItem>(MobileInboxItemOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileInboxItemOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileInboxItemInput);
    [Benchmark]
    public Shared.Models.MobileInboxItem DeserializeMobileInboxItemWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileInboxItem>(MobileInboxItemOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileInboxItemOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileInboxItemInput);
    [Benchmark]
    public Shared.Models.MobileInboxItem DeserializeMobileInboxItemWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileInboxItem>(MobileInboxItemOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobilePrivilegeOutputOfJilSerializer = JilSerializer.Serialize(MobilePrivilegeInput);
    [Benchmark]
    public Shared.Models.MobilePrivilege DeserializeMobilePrivilegeWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobilePrivilege>(MobilePrivilegeOutputOfJilSerializer);
    }
    private static readonly string MobilePrivilegeOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobilePrivilegeInput);
    [Benchmark]
    public Shared.Models.MobilePrivilege DeserializeMobilePrivilegeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobilePrivilege>(MobilePrivilegeOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobilePrivilegeOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobilePrivilegeInput);
    [Benchmark]
    public Shared.Models.MobilePrivilege DeserializeMobilePrivilegeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobilePrivilege>(MobilePrivilegeOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobilePrivilegeOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobilePrivilegeInput);
    [Benchmark]
    public Shared.Models.MobilePrivilege DeserializeMobilePrivilegeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobilePrivilege>(MobilePrivilegeOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobilePrivilegeOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobilePrivilegeInput);
    [Benchmark]
    public Shared.Models.MobilePrivilege DeserializeMobilePrivilegeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobilePrivilege>(MobilePrivilegeOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileQuestionOutputOfJilSerializer = JilSerializer.Serialize(MobileQuestionInput);
    [Benchmark]
    public Shared.Models.MobileQuestion DeserializeMobileQuestionWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileQuestion>(MobileQuestionOutputOfJilSerializer);
    }
    private static readonly string MobileQuestionOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileQuestionInput);
    [Benchmark]
    public Shared.Models.MobileQuestion DeserializeMobileQuestionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileQuestion>(MobileQuestionOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileQuestionOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileQuestionInput);
    [Benchmark]
    public Shared.Models.MobileQuestion DeserializeMobileQuestionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileQuestion>(MobileQuestionOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileQuestionOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileQuestionInput);
    [Benchmark]
    public Shared.Models.MobileQuestion DeserializeMobileQuestionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileQuestion>(MobileQuestionOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileQuestionOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileQuestionInput);
    [Benchmark]
    public Shared.Models.MobileQuestion DeserializeMobileQuestionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileQuestion>(MobileQuestionOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileRepChangeOutputOfJilSerializer = JilSerializer.Serialize(MobileRepChangeInput);
    [Benchmark]
    public Shared.Models.MobileRepChange DeserializeMobileRepChangeWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileRepChange>(MobileRepChangeOutputOfJilSerializer);
    }
    private static readonly string MobileRepChangeOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileRepChangeInput);
    [Benchmark]
    public Shared.Models.MobileRepChange DeserializeMobileRepChangeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileRepChange>(MobileRepChangeOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileRepChangeOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileRepChangeInput);
    [Benchmark]
    public Shared.Models.MobileRepChange DeserializeMobileRepChangeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileRepChange>(MobileRepChangeOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileRepChangeOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileRepChangeInput);
    [Benchmark]
    public Shared.Models.MobileRepChange DeserializeMobileRepChangeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileRepChange>(MobileRepChangeOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileRepChangeOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileRepChangeInput);
    [Benchmark]
    public Shared.Models.MobileRepChange DeserializeMobileRepChangeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileRepChange>(MobileRepChangeOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileUpdateNoticeOutputOfJilSerializer = JilSerializer.Serialize(MobileUpdateNoticeInput);
    [Benchmark]
    public Shared.Models.MobileUpdateNotice DeserializeMobileUpdateNoticeWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileUpdateNotice>(MobileUpdateNoticeOutputOfJilSerializer);
    }
    private static readonly string MobileUpdateNoticeOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileUpdateNoticeInput);
    [Benchmark]
    public Shared.Models.MobileUpdateNotice DeserializeMobileUpdateNoticeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileUpdateNotice>(MobileUpdateNoticeOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileUpdateNoticeOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileUpdateNoticeInput);
    [Benchmark]
    public Shared.Models.MobileUpdateNotice DeserializeMobileUpdateNoticeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileUpdateNotice>(MobileUpdateNoticeOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileUpdateNoticeOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileUpdateNoticeInput);
    [Benchmark]
    public Shared.Models.MobileUpdateNotice DeserializeMobileUpdateNoticeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileUpdateNotice>(MobileUpdateNoticeOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileUpdateNoticeOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileUpdateNoticeInput);
    [Benchmark]
    public Shared.Models.MobileUpdateNotice DeserializeMobileUpdateNoticeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileUpdateNotice>(MobileUpdateNoticeOutputOfSystemTextJsonSerializer);
    }
    private static readonly string NetworkUserOutputOfJilSerializer = JilSerializer.Serialize(NetworkUserInput);
    [Benchmark]
    public Shared.Models.NetworkUser DeserializeNetworkUserWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.NetworkUser>(NetworkUserOutputOfJilSerializer);
    }
    private static readonly string NetworkUserOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(NetworkUserInput);
    [Benchmark]
    public Shared.Models.NetworkUser DeserializeNetworkUserWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.NetworkUser>(NetworkUserOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] NetworkUserOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(NetworkUserInput);
    [Benchmark]
    public Shared.Models.NetworkUser DeserializeNetworkUserWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.NetworkUser>(NetworkUserOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] NetworkUserOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(NetworkUserInput);
    [Benchmark]
    public Shared.Models.NetworkUser DeserializeNetworkUserWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.NetworkUser>(NetworkUserOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] NetworkUserOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(NetworkUserInput);
    [Benchmark]
    public Shared.Models.NetworkUser DeserializeNetworkUserWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.NetworkUser>(NetworkUserOutputOfSystemTextJsonSerializer);
    }
    private static readonly string NotificationOutputOfJilSerializer = JilSerializer.Serialize(NotificationInput);
    [Benchmark]
    public Shared.Models.Notification DeserializeNotificationWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Notification>(NotificationOutputOfJilSerializer);
    }
    private static readonly string NotificationOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(NotificationInput);
    [Benchmark]
    public Shared.Models.Notification DeserializeNotificationWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Notification>(NotificationOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] NotificationOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(NotificationInput);
    [Benchmark]
    public Shared.Models.Notification DeserializeNotificationWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Notification>(NotificationOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] NotificationOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(NotificationInput);
    [Benchmark]
    public Shared.Models.Notification DeserializeNotificationWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Notification>(NotificationOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] NotificationOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(NotificationInput);
    [Benchmark]
    public Shared.Models.Notification DeserializeNotificationWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Notification>(NotificationOutputOfSystemTextJsonSerializer);
    }
    private static readonly string PostOutputOfJilSerializer = JilSerializer.Serialize(PostInput);
    [Benchmark]
    public Shared.Models.Post DeserializePostWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Post>(PostOutputOfJilSerializer);
    }
    private static readonly string PostOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(PostInput);
    [Benchmark]
    public Shared.Models.Post DeserializePostWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Post>(PostOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] PostOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(PostInput);
    [Benchmark]
    public Shared.Models.Post DeserializePostWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Post>(PostOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] PostOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(PostInput);
    [Benchmark]
    public Shared.Models.Post DeserializePostWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Post>(PostOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] PostOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(PostInput);
    [Benchmark]
    public Shared.Models.Post DeserializePostWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Post>(PostOutputOfSystemTextJsonSerializer);
    }
    private static readonly string PrivilegeOutputOfJilSerializer = JilSerializer.Serialize(PrivilegeInput);
    [Benchmark]
    public Shared.Models.Privilege DeserializePrivilegeWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Privilege>(PrivilegeOutputOfJilSerializer);
    }
    private static readonly string PrivilegeOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(PrivilegeInput);
    [Benchmark]
    public Shared.Models.Privilege DeserializePrivilegeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Privilege>(PrivilegeOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] PrivilegeOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(PrivilegeInput);
    [Benchmark]
    public Shared.Models.Privilege DeserializePrivilegeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Privilege>(PrivilegeOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] PrivilegeOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(PrivilegeInput);
    [Benchmark]
    public Shared.Models.Privilege DeserializePrivilegeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Privilege>(PrivilegeOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] PrivilegeOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(PrivilegeInput);
    [Benchmark]
    public Shared.Models.Privilege DeserializePrivilegeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Privilege>(PrivilegeOutputOfSystemTextJsonSerializer);
    }
    private static readonly string QuestionOutputOfJilSerializer = JilSerializer.Serialize(QuestionInput);
    [Benchmark]
    public Shared.Models.Question DeserializeQuestionWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Question>(QuestionOutputOfJilSerializer);
    }
    private static readonly string QuestionOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(QuestionInput);
    [Benchmark]
    public Shared.Models.Question DeserializeQuestionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Question>(QuestionOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] QuestionOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(QuestionInput);
    [Benchmark]
    public Shared.Models.Question DeserializeQuestionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Question>(QuestionOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] QuestionOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(QuestionInput);
    [Benchmark]
    public Shared.Models.Question DeserializeQuestionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Question>(QuestionOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] QuestionOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(QuestionInput);
    [Benchmark]
    public Shared.Models.Question DeserializeQuestionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Question>(QuestionOutputOfSystemTextJsonSerializer);
    }
    private static readonly string QuestionTimelineOutputOfJilSerializer = JilSerializer.Serialize(QuestionTimelineInput);
    [Benchmark]
    public Shared.Models.QuestionTimeline DeserializeQuestionTimelineWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.QuestionTimeline>(QuestionTimelineOutputOfJilSerializer);
    }
    private static readonly string QuestionTimelineOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(QuestionTimelineInput);
    [Benchmark]
    public Shared.Models.QuestionTimeline DeserializeQuestionTimelineWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.QuestionTimeline>(QuestionTimelineOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] QuestionTimelineOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(QuestionTimelineInput);
    [Benchmark]
    public Shared.Models.QuestionTimeline DeserializeQuestionTimelineWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.QuestionTimeline>(QuestionTimelineOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] QuestionTimelineOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(QuestionTimelineInput);
    [Benchmark]
    public Shared.Models.QuestionTimeline DeserializeQuestionTimelineWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.QuestionTimeline>(QuestionTimelineOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] QuestionTimelineOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(QuestionTimelineInput);
    [Benchmark]
    public Shared.Models.QuestionTimeline DeserializeQuestionTimelineWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.QuestionTimeline>(QuestionTimelineOutputOfSystemTextJsonSerializer);
    }
    private static readonly string ReputationOutputOfJilSerializer = JilSerializer.Serialize(ReputationInput);
    [Benchmark]
    public Shared.Models.Reputation DeserializeReputationWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Reputation>(ReputationOutputOfJilSerializer);
    }
    private static readonly string ReputationOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(ReputationInput);
    [Benchmark]
    public Shared.Models.Reputation DeserializeReputationWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Reputation>(ReputationOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] ReputationOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(ReputationInput);
    [Benchmark]
    public Shared.Models.Reputation DeserializeReputationWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Reputation>(ReputationOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] ReputationOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(ReputationInput);
    [Benchmark]
    public Shared.Models.Reputation DeserializeReputationWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Reputation>(ReputationOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] ReputationOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(ReputationInput);
    [Benchmark]
    public Shared.Models.Reputation DeserializeReputationWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Reputation>(ReputationOutputOfSystemTextJsonSerializer);
    }
    private static readonly string ReputationHistoryOutputOfJilSerializer = JilSerializer.Serialize(ReputationHistoryInput);
    [Benchmark]
    public Shared.Models.ReputationHistory DeserializeReputationHistoryWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.ReputationHistory>(ReputationHistoryOutputOfJilSerializer);
    }
    private static readonly string ReputationHistoryOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(ReputationHistoryInput);
    [Benchmark]
    public Shared.Models.ReputationHistory DeserializeReputationHistoryWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.ReputationHistory>(ReputationHistoryOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] ReputationHistoryOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(ReputationHistoryInput);
    [Benchmark]
    public Shared.Models.ReputationHistory DeserializeReputationHistoryWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.ReputationHistory>(ReputationHistoryOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] ReputationHistoryOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(ReputationHistoryInput);
    [Benchmark]
    public Shared.Models.ReputationHistory DeserializeReputationHistoryWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.ReputationHistory>(ReputationHistoryOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] ReputationHistoryOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(ReputationHistoryInput);
    [Benchmark]
    public Shared.Models.ReputationHistory DeserializeReputationHistoryWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.ReputationHistory>(ReputationHistoryOutputOfSystemTextJsonSerializer);
    }
    private static readonly string RevisionOutputOfJilSerializer = JilSerializer.Serialize(RevisionInput);
    [Benchmark]
    public Shared.Models.Revision DeserializeRevisionWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Revision>(RevisionOutputOfJilSerializer);
    }
    private static readonly string RevisionOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(RevisionInput);
    [Benchmark]
    public Shared.Models.Revision DeserializeRevisionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Revision>(RevisionOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] RevisionOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(RevisionInput);
    [Benchmark]
    public Shared.Models.Revision DeserializeRevisionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Revision>(RevisionOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] RevisionOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(RevisionInput);
    [Benchmark]
    public Shared.Models.Revision DeserializeRevisionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Revision>(RevisionOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] RevisionOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(RevisionInput);
    [Benchmark]
    public Shared.Models.Revision DeserializeRevisionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Revision>(RevisionOutputOfSystemTextJsonSerializer);
    }
    private static readonly string SearchExcerptOutputOfJilSerializer = JilSerializer.Serialize(SearchExcerptInput);
    [Benchmark]
    public Shared.Models.SearchExcerpt DeserializeSearchExcerptWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.SearchExcerpt>(SearchExcerptOutputOfJilSerializer);
    }
    private static readonly string SearchExcerptOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(SearchExcerptInput);
    [Benchmark]
    public Shared.Models.SearchExcerpt DeserializeSearchExcerptWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.SearchExcerpt>(SearchExcerptOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] SearchExcerptOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(SearchExcerptInput);
    [Benchmark]
    public Shared.Models.SearchExcerpt DeserializeSearchExcerptWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.SearchExcerpt>(SearchExcerptOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] SearchExcerptOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(SearchExcerptInput);
    [Benchmark]
    public Shared.Models.SearchExcerpt DeserializeSearchExcerptWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.SearchExcerpt>(SearchExcerptOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] SearchExcerptOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(SearchExcerptInput);
    [Benchmark]
    public Shared.Models.SearchExcerpt DeserializeSearchExcerptWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.SearchExcerpt>(SearchExcerptOutputOfSystemTextJsonSerializer);
    }
    private static readonly string ShallowUserOutputOfJilSerializer = JilSerializer.Serialize(ShallowUserInput);
    [Benchmark]
    public Shared.Models.ShallowUser DeserializeShallowUserWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.ShallowUser>(ShallowUserOutputOfJilSerializer);
    }
    private static readonly string ShallowUserOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(ShallowUserInput);
    [Benchmark]
    public Shared.Models.ShallowUser DeserializeShallowUserWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.ShallowUser>(ShallowUserOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] ShallowUserOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(ShallowUserInput);
    [Benchmark]
    public Shared.Models.ShallowUser DeserializeShallowUserWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.ShallowUser>(ShallowUserOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] ShallowUserOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(ShallowUserInput);
    [Benchmark]
    public Shared.Models.ShallowUser DeserializeShallowUserWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.ShallowUser>(ShallowUserOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] ShallowUserOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(ShallowUserInput);
    [Benchmark]
    public Shared.Models.ShallowUser DeserializeShallowUserWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.ShallowUser>(ShallowUserOutputOfSystemTextJsonSerializer);
    }
    private static readonly string SuggestedEditOutputOfJilSerializer = JilSerializer.Serialize(SuggestedEditInput);
    [Benchmark]
    public Shared.Models.SuggestedEdit DeserializeSuggestedEditWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.SuggestedEdit>(SuggestedEditOutputOfJilSerializer);
    }
    private static readonly string SuggestedEditOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(SuggestedEditInput);
    [Benchmark]
    public Shared.Models.SuggestedEdit DeserializeSuggestedEditWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.SuggestedEdit>(SuggestedEditOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] SuggestedEditOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(SuggestedEditInput);
    [Benchmark]
    public Shared.Models.SuggestedEdit DeserializeSuggestedEditWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.SuggestedEdit>(SuggestedEditOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] SuggestedEditOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(SuggestedEditInput);
    [Benchmark]
    public Shared.Models.SuggestedEdit DeserializeSuggestedEditWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.SuggestedEdit>(SuggestedEditOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] SuggestedEditOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(SuggestedEditInput);
    [Benchmark]
    public Shared.Models.SuggestedEdit DeserializeSuggestedEditWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.SuggestedEdit>(SuggestedEditOutputOfSystemTextJsonSerializer);
    }
    private static readonly string TagOutputOfJilSerializer = JilSerializer.Serialize(TagInput);
    [Benchmark]
    public Shared.Models.Tag DeserializeTagWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Tag>(TagOutputOfJilSerializer);
    }
    private static readonly string TagOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(TagInput);
    [Benchmark]
    public Shared.Models.Tag DeserializeTagWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Tag>(TagOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] TagOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(TagInput);
    [Benchmark]
    public Shared.Models.Tag DeserializeTagWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Tag>(TagOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] TagOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(TagInput);
    [Benchmark]
    public Shared.Models.Tag DeserializeTagWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Tag>(TagOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] TagOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(TagInput);
    [Benchmark]
    public Shared.Models.Tag DeserializeTagWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Tag>(TagOutputOfSystemTextJsonSerializer);
    }
    private static readonly string TagScoreOutputOfJilSerializer = JilSerializer.Serialize(TagScoreInput);
    [Benchmark]
    public Shared.Models.TagScore DeserializeTagScoreWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.TagScore>(TagScoreOutputOfJilSerializer);
    }
    private static readonly string TagScoreOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(TagScoreInput);
    [Benchmark]
    public Shared.Models.TagScore DeserializeTagScoreWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.TagScore>(TagScoreOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] TagScoreOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(TagScoreInput);
    [Benchmark]
    public Shared.Models.TagScore DeserializeTagScoreWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.TagScore>(TagScoreOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] TagScoreOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(TagScoreInput);
    [Benchmark]
    public Shared.Models.TagScore DeserializeTagScoreWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.TagScore>(TagScoreOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] TagScoreOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(TagScoreInput);
    [Benchmark]
    public Shared.Models.TagScore DeserializeTagScoreWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.TagScore>(TagScoreOutputOfSystemTextJsonSerializer);
    }
    private static readonly string TagSynonymOutputOfJilSerializer = JilSerializer.Serialize(TagSynonymInput);
    [Benchmark]
    public Shared.Models.TagSynonym DeserializeTagSynonymWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.TagSynonym>(TagSynonymOutputOfJilSerializer);
    }
    private static readonly string TagSynonymOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(TagSynonymInput);
    [Benchmark]
    public Shared.Models.TagSynonym DeserializeTagSynonymWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.TagSynonym>(TagSynonymOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] TagSynonymOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(TagSynonymInput);
    [Benchmark]
    public Shared.Models.TagSynonym DeserializeTagSynonymWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.TagSynonym>(TagSynonymOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] TagSynonymOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(TagSynonymInput);
    [Benchmark]
    public Shared.Models.TagSynonym DeserializeTagSynonymWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.TagSynonym>(TagSynonymOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] TagSynonymOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(TagSynonymInput);
    [Benchmark]
    public Shared.Models.TagSynonym DeserializeTagSynonymWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.TagSynonym>(TagSynonymOutputOfSystemTextJsonSerializer);
    }
    private static readonly string TagWikiOutputOfJilSerializer = JilSerializer.Serialize(TagWikiInput);
    [Benchmark]
    public Shared.Models.TagWiki DeserializeTagWikiWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.TagWiki>(TagWikiOutputOfJilSerializer);
    }
    private static readonly string TagWikiOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(TagWikiInput);
    [Benchmark]
    public Shared.Models.TagWiki DeserializeTagWikiWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.TagWiki>(TagWikiOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] TagWikiOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(TagWikiInput);
    [Benchmark]
    public Shared.Models.TagWiki DeserializeTagWikiWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.TagWiki>(TagWikiOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] TagWikiOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(TagWikiInput);
    [Benchmark]
    public Shared.Models.TagWiki DeserializeTagWikiWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.TagWiki>(TagWikiOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] TagWikiOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(TagWikiInput);
    [Benchmark]
    public Shared.Models.TagWiki DeserializeTagWikiWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.TagWiki>(TagWikiOutputOfSystemTextJsonSerializer);
    }
    private static readonly string TopTagOutputOfJilSerializer = JilSerializer.Serialize(TopTagInput);
    [Benchmark]
    public Shared.Models.TopTag DeserializeTopTagWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.TopTag>(TopTagOutputOfJilSerializer);
    }
    private static readonly string TopTagOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(TopTagInput);
    [Benchmark]
    public Shared.Models.TopTag DeserializeTopTagWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.TopTag>(TopTagOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] TopTagOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(TopTagInput);
    [Benchmark]
    public Shared.Models.TopTag DeserializeTopTagWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.TopTag>(TopTagOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] TopTagOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(TopTagInput);
    [Benchmark]
    public Shared.Models.TopTag DeserializeTopTagWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.TopTag>(TopTagOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] TopTagOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(TopTagInput);
    [Benchmark]
    public Shared.Models.TopTag DeserializeTopTagWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.TopTag>(TopTagOutputOfSystemTextJsonSerializer);
    }
    private static readonly string UserOutputOfJilSerializer = JilSerializer.Serialize(UserInput);
    [Benchmark]
    public Shared.Models.User DeserializeUserWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.User>(UserOutputOfJilSerializer);
    }
    private static readonly string UserOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(UserInput);
    [Benchmark]
    public Shared.Models.User DeserializeUserWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.User>(UserOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] UserOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(UserInput);
    [Benchmark]
    public Shared.Models.User DeserializeUserWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.User>(UserOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] UserOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(UserInput);
    [Benchmark]
    public Shared.Models.User DeserializeUserWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.User>(UserOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] UserOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(UserInput);
    [Benchmark]
    public Shared.Models.User DeserializeUserWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.User>(UserOutputOfSystemTextJsonSerializer);
    }
    private static readonly string UserTimelineOutputOfJilSerializer = JilSerializer.Serialize(UserTimelineInput);
    [Benchmark]
    public Shared.Models.UserTimeline DeserializeUserTimelineWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.UserTimeline>(UserTimelineOutputOfJilSerializer);
    }
    private static readonly string UserTimelineOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(UserTimelineInput);
    [Benchmark]
    public Shared.Models.UserTimeline DeserializeUserTimelineWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.UserTimeline>(UserTimelineOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] UserTimelineOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(UserTimelineInput);
    [Benchmark]
    public Shared.Models.UserTimeline DeserializeUserTimelineWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.UserTimeline>(UserTimelineOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] UserTimelineOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(UserTimelineInput);
    [Benchmark]
    public Shared.Models.UserTimeline DeserializeUserTimelineWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.UserTimeline>(UserTimelineOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] UserTimelineOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(UserTimelineInput);
    [Benchmark]
    public Shared.Models.UserTimeline DeserializeUserTimelineWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.UserTimeline>(UserTimelineOutputOfSystemTextJsonSerializer);
    }
    private static readonly string WritePermissionOutputOfJilSerializer = JilSerializer.Serialize(WritePermissionInput);
    [Benchmark]
    public Shared.Models.WritePermission DeserializeWritePermissionWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.WritePermission>(WritePermissionOutputOfJilSerializer);
    }
    private static readonly string WritePermissionOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(WritePermissionInput);
    [Benchmark]
    public Shared.Models.WritePermission DeserializeWritePermissionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.WritePermission>(WritePermissionOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] WritePermissionOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(WritePermissionInput);
    [Benchmark]
    public Shared.Models.WritePermission DeserializeWritePermissionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.WritePermission>(WritePermissionOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] WritePermissionOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(WritePermissionInput);
    [Benchmark]
    public Shared.Models.WritePermission DeserializeWritePermissionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.WritePermission>(WritePermissionOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] WritePermissionOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(WritePermissionInput);
    [Benchmark]
    public Shared.Models.WritePermission DeserializeWritePermissionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.WritePermission>(WritePermissionOutputOfSystemTextJsonSerializer);
    }
    private static readonly string RelatedSiteOutputOfJilSerializer = JilSerializer.Serialize(RelatedSiteInput);
    [Benchmark]
    public Shared.Models.Info.RelatedSite DeserializeRelatedSiteWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Info.RelatedSite>(RelatedSiteOutputOfJilSerializer);
    }
    private static readonly string RelatedSiteOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(RelatedSiteInput);
    [Benchmark]
    public Shared.Models.Info.RelatedSite DeserializeRelatedSiteWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Info.RelatedSite>(RelatedSiteOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] RelatedSiteOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(RelatedSiteInput);
    [Benchmark]
    public Shared.Models.Info.RelatedSite DeserializeRelatedSiteWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Info.RelatedSite>(RelatedSiteOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] RelatedSiteOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(RelatedSiteInput);
    [Benchmark]
    public Shared.Models.Info.RelatedSite DeserializeRelatedSiteWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Info.RelatedSite>(RelatedSiteOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] RelatedSiteOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(RelatedSiteInput);
    [Benchmark]
    public Shared.Models.Info.RelatedSite DeserializeRelatedSiteWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Info.RelatedSite>(RelatedSiteOutputOfSystemTextJsonSerializer);
    }
    private static readonly string SiteOutputOfJilSerializer = JilSerializer.Serialize(SiteInput);
    [Benchmark]
    public Shared.Models.Info.Site DeserializeSiteWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Info.Site>(SiteOutputOfJilSerializer);
    }
    private static readonly string SiteOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(SiteInput);
    [Benchmark]
    public Shared.Models.Info.Site DeserializeSiteWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Info.Site>(SiteOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] SiteOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(SiteInput);
    [Benchmark]
    public Shared.Models.Info.Site DeserializeSiteWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Info.Site>(SiteOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] SiteOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(SiteInput);
    [Benchmark]
    public Shared.Models.Info.Site DeserializeSiteWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Info.Site>(SiteOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] SiteOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(SiteInput);
    [Benchmark]
    public Shared.Models.Info.Site DeserializeSiteWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Info.Site>(SiteOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MobileBannerAdImageOutputOfJilSerializer = JilSerializer.Serialize(MobileBannerAdImageInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd.MobileBannerAdImage DeserializeMobileBannerAdImageWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.MobileBannerAd.MobileBannerAdImage>(MobileBannerAdImageOutputOfJilSerializer);
    }
    private static readonly string MobileBannerAdImageOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MobileBannerAdImageInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd.MobileBannerAdImage DeserializeMobileBannerAdImageWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.MobileBannerAd.MobileBannerAdImage>(MobileBannerAdImageOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MobileBannerAdImageOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MobileBannerAdImageInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd.MobileBannerAdImage DeserializeMobileBannerAdImageWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.MobileBannerAd.MobileBannerAdImage>(MobileBannerAdImageOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MobileBannerAdImageOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MobileBannerAdImageInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd.MobileBannerAdImage DeserializeMobileBannerAdImageWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.MobileBannerAd.MobileBannerAdImage>(MobileBannerAdImageOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MobileBannerAdImageOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MobileBannerAdImageInput);
    [Benchmark]
    public Shared.Models.MobileBannerAd.MobileBannerAdImage DeserializeMobileBannerAdImageWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.MobileBannerAd.MobileBannerAdImage>(MobileBannerAdImageOutputOfSystemTextJsonSerializer);
    }
    private static readonly string ClosedDetailsOutputOfJilSerializer = JilSerializer.Serialize(ClosedDetailsInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails DeserializeClosedDetailsWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Question.ClosedDetails>(ClosedDetailsOutputOfJilSerializer);
    }
    private static readonly string ClosedDetailsOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(ClosedDetailsInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails DeserializeClosedDetailsWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Question.ClosedDetails>(ClosedDetailsOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] ClosedDetailsOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(ClosedDetailsInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails DeserializeClosedDetailsWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Question.ClosedDetails>(ClosedDetailsOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] ClosedDetailsOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(ClosedDetailsInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails DeserializeClosedDetailsWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Question.ClosedDetails>(ClosedDetailsOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] ClosedDetailsOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(ClosedDetailsInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails DeserializeClosedDetailsWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Question.ClosedDetails>(ClosedDetailsOutputOfSystemTextJsonSerializer);
    }
    private static readonly string MigrationInfoOutputOfJilSerializer = JilSerializer.Serialize(MigrationInfoInput);
    [Benchmark]
    public Shared.Models.Question.MigrationInfo DeserializeMigrationInfoWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Question.MigrationInfo>(MigrationInfoOutputOfJilSerializer);
    }
    private static readonly string MigrationInfoOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(MigrationInfoInput);
    [Benchmark]
    public Shared.Models.Question.MigrationInfo DeserializeMigrationInfoWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Question.MigrationInfo>(MigrationInfoOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] MigrationInfoOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(MigrationInfoInput);
    [Benchmark]
    public Shared.Models.Question.MigrationInfo DeserializeMigrationInfoWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Question.MigrationInfo>(MigrationInfoOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] MigrationInfoOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(MigrationInfoInput);
    [Benchmark]
    public Shared.Models.Question.MigrationInfo DeserializeMigrationInfoWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Question.MigrationInfo>(MigrationInfoOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] MigrationInfoOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(MigrationInfoInput);
    [Benchmark]
    public Shared.Models.Question.MigrationInfo DeserializeMigrationInfoWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Question.MigrationInfo>(MigrationInfoOutputOfSystemTextJsonSerializer);
    }
    private static readonly string NoticeOutputOfJilSerializer = JilSerializer.Serialize(NoticeInput);
    [Benchmark]
    public Shared.Models.Question.Notice DeserializeNoticeWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Question.Notice>(NoticeOutputOfJilSerializer);
    }
    private static readonly string NoticeOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(NoticeInput);
    [Benchmark]
    public Shared.Models.Question.Notice DeserializeNoticeWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Question.Notice>(NoticeOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] NoticeOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(NoticeInput);
    [Benchmark]
    public Shared.Models.Question.Notice DeserializeNoticeWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Question.Notice>(NoticeOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] NoticeOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(NoticeInput);
    [Benchmark]
    public Shared.Models.Question.Notice DeserializeNoticeWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Question.Notice>(NoticeOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] NoticeOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(NoticeInput);
    [Benchmark]
    public Shared.Models.Question.Notice DeserializeNoticeWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Question.Notice>(NoticeOutputOfSystemTextJsonSerializer);
    }
    private static readonly string BadgeCountOutputOfJilSerializer = JilSerializer.Serialize(BadgeCountInput);
    [Benchmark]
    public Shared.Models.User.BadgeCount DeserializeBadgeCountWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.User.BadgeCount>(BadgeCountOutputOfJilSerializer);
    }
    private static readonly string BadgeCountOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(BadgeCountInput);
    [Benchmark]
    public Shared.Models.User.BadgeCount DeserializeBadgeCountWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.User.BadgeCount>(BadgeCountOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] BadgeCountOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(BadgeCountInput);
    [Benchmark]
    public Shared.Models.User.BadgeCount DeserializeBadgeCountWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.User.BadgeCount>(BadgeCountOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] BadgeCountOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(BadgeCountInput);
    [Benchmark]
    public Shared.Models.User.BadgeCount DeserializeBadgeCountWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.User.BadgeCount>(BadgeCountOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] BadgeCountOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(BadgeCountInput);
    [Benchmark]
    public Shared.Models.User.BadgeCount DeserializeBadgeCountWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.User.BadgeCount>(BadgeCountOutputOfSystemTextJsonSerializer);
    }
    private static readonly string StylingOutputOfJilSerializer = JilSerializer.Serialize(StylingInput);
    [Benchmark]
    public Shared.Models.Info.Site.Styling DeserializeStylingWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Info.Site.Styling>(StylingOutputOfJilSerializer);
    }
    private static readonly string StylingOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(StylingInput);
    [Benchmark]
    public Shared.Models.Info.Site.Styling DeserializeStylingWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Info.Site.Styling>(StylingOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] StylingOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(StylingInput);
    [Benchmark]
    public Shared.Models.Info.Site.Styling DeserializeStylingWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Info.Site.Styling>(StylingOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] StylingOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(StylingInput);
    [Benchmark]
    public Shared.Models.Info.Site.Styling DeserializeStylingWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Info.Site.Styling>(StylingOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] StylingOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(StylingInput);
    [Benchmark]
    public Shared.Models.Info.Site.Styling DeserializeStylingWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Info.Site.Styling>(StylingOutputOfSystemTextJsonSerializer);
    }
    private static readonly string OriginalQuestionOutputOfJilSerializer = JilSerializer.Serialize(OriginalQuestionInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails.OriginalQuestion DeserializeOriginalQuestionWithJilSerializer()
    {
        return JilSerializer.Deserialize<Shared.Models.Question.ClosedDetails.OriginalQuestion>(OriginalQuestionOutputOfJilSerializer);
    }
    private static readonly string OriginalQuestionOutputOfSpanJsonSerializer = SpanJsonSerializer.Serialize(OriginalQuestionInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails.OriginalQuestion DeserializeOriginalQuestionWithSpanJsonSerializer()
    {
        return SpanJsonSerializer.Deserialize<Shared.Models.Question.ClosedDetails.OriginalQuestion>(OriginalQuestionOutputOfSpanJsonSerializer);
    }
    private static readonly byte[] OriginalQuestionOutputOfSpanJsonUtf8Serializer = SpanJsonUtf8Serializer.Serialize(OriginalQuestionInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails.OriginalQuestion DeserializeOriginalQuestionWithSpanJsonUtf8Serializer()
    {
        return SpanJsonUtf8Serializer.Deserialize<Shared.Models.Question.ClosedDetails.OriginalQuestion>(OriginalQuestionOutputOfSpanJsonUtf8Serializer);
    }
    private static readonly byte[] OriginalQuestionOutputOfUtf8JsonSerializer = Utf8JsonSerializer.Serialize(OriginalQuestionInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails.OriginalQuestion DeserializeOriginalQuestionWithUtf8JsonSerializer()
    {
        return Utf8JsonSerializer.Deserialize<Shared.Models.Question.ClosedDetails.OriginalQuestion>(OriginalQuestionOutputOfUtf8JsonSerializer);
    }
    private static readonly byte[] OriginalQuestionOutputOfSystemTextJsonSerializer = SystemTextJsonSerializer.Serialize(OriginalQuestionInput);
    [Benchmark]
    public Shared.Models.Question.ClosedDetails.OriginalQuestion DeserializeOriginalQuestionWithSystemTextJsonSerializer()
    {
        return SystemTextJsonSerializer.Deserialize<Shared.Models.Question.ClosedDetails.OriginalQuestion>(OriginalQuestionOutputOfSystemTextJsonSerializer);
    }
  }
}
